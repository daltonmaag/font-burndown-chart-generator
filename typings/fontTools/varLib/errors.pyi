"""
This type stub file was generated by pyright.
"""

class VarLibError(Exception):
    """Base exception for the varLib module."""
    ...


class VarLibValidationError(VarLibError):
    """Raised when input data is invalid from varLib's point of view."""
    ...


class VarLibMergeError(VarLibError):
    """Raised when input data cannot be merged into a variable font."""
    def __init__(self, merger=..., **kwargs) -> None:
        ...
    
    @property
    def reason(self): # -> str | None:
        ...
    
    @property
    def offender(self): # -> tuple[int, str | Unknown] | tuple[None, None]:
        ...
    
    @property
    def details(self): # -> str:
        ...
    
    def __str__(self) -> str:
        ...
    


class ShouldBeConstant(VarLibMergeError):
    """some values were different, but should have been the same"""
    @property
    def details(self): # -> str:
        ...
    


class FoundANone(VarLibMergeError):
    """one of the values in a list was empty when it shouldn't have been"""
    @property
    def offender(self): # -> tuple[int, Unknown | str]:
        ...
    
    @property
    def details(self): # -> str:
        ...
    


class NotANone(VarLibMergeError):
    """one of the values in a list was not empty when it should have been"""
    @property
    def offender(self): # -> tuple[int, Unknown | str]:
        ...
    
    @property
    def details(self): # -> str:
        ...
    


class MismatchedTypes(VarLibMergeError):
    """data had inconsistent types"""
    ...


class LengthsDiffer(VarLibMergeError):
    """a list of objects had inconsistent lengths"""
    ...


class KeysDiffer(VarLibMergeError):
    """a list of objects had different keys"""
    ...


class InconsistentGlyphOrder(VarLibMergeError):
    """the glyph order was inconsistent between masters"""
    ...


class InconsistentExtensions(VarLibMergeError):
    """the masters use extension lookups in inconsistent ways"""
    ...


class UnsupportedFormat(VarLibMergeError):
    """an OpenType subtable (%s) had a format I didn't expect"""
    def __init__(self, merger=..., **kwargs) -> None:
        ...
    
    @property
    def reason(self):
        ...
    


class InconsistentFormats(UnsupportedFormat):
    """an OpenType subtable (%s) had inconsistent formats between masters"""
    ...


class VarLibCFFMergeError(VarLibError):
    ...


class VarLibCFFDictMergeError(VarLibCFFMergeError):
    """Raised when a CFF PrivateDict cannot be merged."""
    def __init__(self, key, value, values) -> None:
        ...
    


class VarLibCFFPointTypeMergeError(VarLibCFFMergeError):
    """Raised when a CFF glyph cannot be merged because of point type differences."""
    def __init__(self, point_type, pt_index, m_index, default_type, glyph_name) -> None:
        ...
    


class VarLibCFFHintTypeMergeError(VarLibCFFMergeError):
    """Raised when a CFF glyph cannot be merged because of hint type differences."""
    def __init__(self, hint_type, cmd_index, m_index, default_type, glyph_name) -> None:
        ...
    


class VariationModelError(VarLibError):
    """Raised when a variation model is faulty."""
    ...


